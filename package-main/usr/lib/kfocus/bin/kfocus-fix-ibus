#!/bin/bash
#
# Copyright 2019-2024 MindShare Inc.
#
# Written for the Kubuntu Focus by M. Mikowski and A. Rainbolt.
#
# Name     : kfocus-fix-ibus
# Summary  : kfocus-fix-ibus <check|repair>
# Purpose  : Provides features for checking IBus configuration for
#            compatibility with Plasma and reconfiguring IBus if needed.
#            Also, usable as a library for adding IBus checking and fixing
#            capabilities to other scripts.
# Example  : kfocus-fix-ibus check; kfocus-fix-ibus repair;
# License  : GPLv2
# Run By   : Developers only
# Spec     : 4027
#
set -u;

_fi2StderrFn () { 1>&2 echo -e  "$*"; }

## BEGIN _fi2RepairIbusConfigFn {
# See https://unix.stackexchange.com/questions/49452
_fi2RepairIbusConfigFn () {
  "${_dconfExe}" write \
    '/desktop/ibus/panel/show-icon-on-systray' 'false' || return 1;
  "${_dconfExe}" write \
    '/desktop/ibus/general/use-system-keyboard-layout' 'true' || return 1;
}
## . END _fi2RepairIbusConfigFn }

## BEGIN _fi2CheckIbusConfigFn {
_fi2CheckIbusConfigFn () {
  declare _do_show_icon _do_use_system_keyboard;

  # NOTE: Right now this just checks for a running IBus service. It may be
  # worthwhile to also check and see if IBus is installed.
  if grep -qai 'org.freedesktop.ibus' < <("${_qdbusExe}"); then
    _do_show_icon="$("${_dconfExe}" read \
      '/desktop/ibus/panel/show-icon-on-systray')";
    _do_use_system_keyboard="$("${_dconfExe}" read \
      '/desktop/ibus/general/use-system-keyboard-layout')";

    if [ "${_do_show_icon}" != 'false' ] || \
      [ "${_do_use_system_keyboard}" != 'true' ]; then
      return 1;
    fi
  fi
}
## . END _fi2CheckIbusConfigFn }

## BEGIN _fi2MainFn {
_fi2MainFn () {
  declare _mode_str;

  _mode_str="${1:-}";

  case "${_mode_str}" in
    check)
      if _fi2CheckIbusConfigFn; then
        _fi2StderrFn 'IBus is configured properly.';
        return;
      else
        _fi2StderrFn 'IBus is misconfigured.';
        return 1;
      fi
      ;;
    repair)
      if _fi2RepairIbusConfigFn; then
        _fi2StderrFn 'IBus configuration repaired.';
        return;
      else
        _fi2StderrFn 'IBus configuration repair failed!';
        return 1;
      fi
      ;;
    *)
      if ! _fi2CheckIbusConfigFn; then
        if _fi2RepairIbusConfigFn; then
          _fi2StderrFn 'Bad IBus configuration detected, repair successful.';
          return
        else
          _fi2StderrFn 'Bad IBus configuration detected, repair failed!';
          return 1;
        fi
      else
        _fi2StderrFn   'IBus is configured properly.';
        return;
      fi
      ;;
  esac
}
## . END _fi2MainFn }

declare _binName _binDir _baseDir _baseName _qdbusExe;

## BEGIN Run fi2MainFn when script is NOT sourced {
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  _binName="$(  readlink -f "$0"       )" || exit 101;
  _binDir="$(   dirname  "${_binName}" )" || exit 101;
  _baseDir="$(  dirname  "${_binDir}"  )" || exit 101;
  _baseName="$( basename "${_binName}" )" || exit 101;
  _qdbusExe="$( command -v qdbus       )";
  _dconfExe="$( command -v dconf       )";

  if [ -z "${_qdbusExe}" ]; then
    _fi2StderrFn 'qdbus not found';
    exit 1;
  fi
  if [ -z "${_dconfExe}" ]; then
    _fi2StderrFn 'dconf not found';
    exit 0;
  fi

  _fi2MainFn "$@";
fi
## . END Run fi2MainFn when script is NOT sourced }
