#!/bin/bash
#
# Copyright 2020-2023 MindShare Inc.
# Written for the Kubuntu Focus by Michael Mikowski and Erich Eickmeyer
#
# Name   : kfocus-reset-effects
# Purpose: Reset KFocus desktop effects and keybindings
# License: GPL v2
# Run by : User
# Spec   : 2169
#
set -u;

## BEGIN _importCommonFn {
# Summary   : _importCommonFn
# Purpose   : Load common routines, prefer relative dir
# Example   : _importCommonFn;
# Arguments : none
# Globals   : Package vars _baseDir _baseName
# Outputs   : none
# Returns   : none
#
_importCommonFn () {
  declare _lib_list _is_loaded _lib_file;
  _lib_list=(
    "${_baseDir}/lib/common.2.source"
    '/usr/lib/kfocus/lib/common.2.source'
  );
  _is_loaded='n';
  for _lib_file in "${_lib_list[@]}"; do
    if [ -r "${_lib_file}" ]; then
      # shellcheck source=../lib/common.2.source
      if source "${_lib_file}"; then
        _is_loaded='y';
        break;
      fi
    fi
  done

  if [ "${_is_loaded}" = 'n' ]; then
    echo 1>&2 "${_baseName}: ABORT - Cannot source common lib";
    exit 202;
  fi
}
## . END _importCommonFn }

## BEGIN _resetEffectsFn {
_resetEffectsFn () {
  declare _model_code _plasma_version _config_list _fixup_list _line \
    _bit_list _key _apply_str _log_list _name_file _config_file _opt_list \
    _fixup_orig_str _fixup_new_str;

  _model_code="$(_cm2EchoModelStrFn 'code')";
  _plasma_version="$(
    dpkg -l plasma-desktop |awk -F'[:-]' '/plasma-desktop\s/{print $3}'
  )";

  _config_list=(
    # Desktops
    'kwin|Desktops|Name_1|ONE'
    'kwin|Desktops|Name_2|TWO'
    'kwin|Desktops|Name_3|THREE'
    'kwin|Desktops|Name_4|FOUR'
    'kwin|Desktops|Number|4'
    'kwin|Desktops|Rows|4'

    # Desktopgrid
    'kwin|Effect-desktopgrid|BorderActivate|'
    'kwin|Effect-desktopgrid|ClickBehavior|'
    'kwin|Effect-desktopgrid|CustomLayoutRows|'
    'kwin|Effect-desktopgrid|DesktopLayoutMode|1'
    'kwin|Effect-desktopgrid|DesktopNameAlignment|36'
    'kwin|Effect-desktopgrid|LayoutMode|1'
    'kwin|Effect-desktopgrid|PresentWindows|'
    'kwin|Effect-desktopgrid|ShowAddRemove|false'

    # Night Color
    # Disable night by default as it can cause flickering on Intel.
    # Users also find it confusing.
    'kwin|Compositing|OpenGLIsUnsafe|false'
    'kwin|NightColor|Active|false'

    # Effects of transparent move, squash windows, wobbly
    'kwin|Effect-kwin4_effect_translucency|MoveResize|80'
    'kwin|Effect-presentwindows|LayoutMode|1'
    'kwin|Effect-wobblywindows|AdvancedMode|true'
    'kwin|Effect-wobblywindows|Drag|85'
    'kwin|Effect-wobblywindows|Stiffness|10'
    'kwin|Effect-wobblywindows|WobblynessLevel|5'

    # Enable plugins
    'kwin|Plugins|desktopgridEnabled|true'
    'kwin|Plugins|kwin4_effect_translucencyEnabled|true'
    'kwin|Plugins|magiclampEnabled|false'
    'kwin|Plugins|kwin4_effect_squashEnabled|true'
    'kwin|Plugins|mouseclickEnabled|true'
    'kwin|Plugins|trackmouseEnabled|true'
    'kwin|Plugins|wobblywindowsEnabled|true'

    # Window borders
    'kwin|org.kde.kdecoration2|BorderSize|Tiny'
    'kwin|org.kde.kdecoration2|BorderSizeAuto|false'

    # Wrap-around navigation
    'kwin|Windows|RollOverDesktops|true'

    # Keyboard shortcuts
    'scut|kwin|Switch to Previous Desktop|Meta+Ctrl+Up,,Switch to Previous Desktop'
    'scut|kwin|Switch to Next Desktop|Meta+Ctrl+Down,,Switch to Next Desktop'
    'scut|kwin|Window Fullscreen|Meta+F,none,Make Window Fullscreen'
    # Reverted from Meta+F8 to Ctrl+F8 as this is the default again in 5.27.9+
    'scut|kwin|ShowDesktopGrid|Ctrl+F8,Ctrl+F8,Show Desktop Grid'
    'scut|kwin|Switch to Desktop 1|Ctrl+F1,Ctrl+F1,Switch to Desktop 1'
    'scut|kwin|Switch to Desktop 2|Ctrl+F2,Ctrl+F2,Switch to Desktop 2'
    'scut|kwin|Switch to Desktop 3|Ctrl+F3,Ctrl+F3,Switch to Desktop 3'
    'scut|kwin|Switch to Desktop 4|Ctrl+F4,Ctrl+F4,Switch to Desktop 4'
    'scut|kwin|Walk Through Windows|Alt+Tab,Alt+Tab,Walk Through Windows'
    'scut|kwin|Walk Through Windows (Reverse)|Alt+Shift+Backtab,Alt+Shift+Backtab,Walk Through Windows (Reverse)'
    'scut|kwin|Suspend Compositing|Alt+Shift+F12,Alt+Shift+F12,Suspend Compositing'
    'scut|org.kde.krunner.desktop|_launch|Alt+Space\tAlt+F2\tSearch,Alt+Space\tAlt+F2\tSearch,KRunner'
    'scut|kwin|Show Desktop|Meta+D,Meta+D,Peek at Desktop'
    'scut|kwin|view_actual_size|Meta+0,Meta+0,Zoom to Actual Size'
    'scut|kwin|view_zoom_in|Meta+=,Meta++\tMeta+=,Zoom In'
    'scut|kwin|view_zoom_out|Meta+-,Meta+-,Zoom Out'
    'scut|org.kde.plasma.emojier.desktop|_launch|Meta+.,Meta+.,Emoji Selector'
    'scut|ksmserver|Lock Session|Meta+L\tCtrl+Alt+L\tScreensaver,Meta+L\tScreensaver,Lock Session'
    'scut|kwin|Edit Tiles|Meta+T,Meta+T,Toggle Tiles Editor'
    'scut|kwin|Window Minimize|Meta+PgDown,Meta+PgDown,Minimize Window'
    'scut|kwin|Window Maximize|Meta+PgUp,Meta+PgUp,Maximize Window'
    'scut|kwin|Window Quick Tile Top|Meta+Up,Meta+Up,Quick Tile Window to the Top'
    'scut|kwin|Window Quick Tile Left|Meta+Left,Meta+Left,Quick Tile Window to the Left'
    'scut|kwin|Window Quick Tile Right|Meta+Right,Meta+Right,Quick Tile Window to the Right'
    'scut|kwin|Window Quick Tile Bottom|Meta+Down,Meta+Down,Quick Tile Window to the Bottom'

    # Reset all things mouse tracking to defaults
    'scut|kwin|TrackMouse|'
    'kwin|Effect-trackmouse|Alt|'
    'kwin|Effect-trackmouse|Control|'
    'kwin|Effect-trackmouse|Meta|'
    'kwin|Effect-trackmouse|Shift|'

    # Prevent plasma-welcome center from running alone.
    # It is presented in first-run wizard.
    "plwc|General|LastSeenVersion|${_plasma_version:-5.27.11}"
    'plwc|General|ShouldShow|false'

    # Reset DPI per ticket 3521: Set scale factor based on device.
    #   First, clear prior values.
    'font|General|forceFontDPI|'
    'glob|KScreen|ScaleFactor|'

    # Second, set desired values on devices where it matters.
    'font|General|forceFontDPI|120|ir14g1'
    'font|General|forceFontDPI|120|ir14g2'
    'font|General|forceFontDPI|136|ir16g2'
    'font|General|forceFontDPI|136|m2g4'
    'font|General|forceFontDPI|136|m2g5'
    'font|General|forceFontDPI|136|m2g5p'

  );

  _fixup_list=(
    'scut|_launch=Alt+Space\\tAlt+F2\\tSearch,Alt+Space\\tAlt+F2\\tSearch,KRunner|_launch=Alt+Space\tAlt+F2\tSearch,Alt+Space\tAlt+F2\tSearch,KRunner'
    'scut|view_zoom_in=Meta+=,Meta++\\tMeta+=,Zoom In|view_zoom_in=Meta+=,Meta++\tMeta+=,Zoom In'
    'scut|Lock Session=Meta+L\\tCtrl+Alt+L\\tScreensaver,Meta+L\\tScreensaver,Lock Session|Lock Session=Meta+L\tCtrl+Alt+L\tScreensaver,Meta+L\tScreensaver,Lock Session'
  );

  _log_list=();
  for _line in "${_config_list[@]}"; do
    IFS='|' read -r -a _bit_list <<<"${_line}";
    _key="${_bit_list[0]:-}";

    ## DEBUG: Skip keys
    # if [[ "${_key}" =~ ^(font|glob)$ ]];
    # then _cm2EchoFn "Process ${_line}";
    # else _cm2WarnStrFn "Skip ${_line}"; continue;
    # fi

    _apply_str="${_line}";
    # DEBUG Delete all kwin keys
    # if [ "${_key}" = 'kwin' ]; then
    #   _bit_list[3]='';
    #   _apply_str="$(IFS='|'; echo "${_bit_list[*]}")";
    # fi

    _name_file="${_fileMap[$_key]}";
    if [ -z "${_name_file}" ]; then
      _log_list+=("WARN: Config key |${_key}| is not supported.");
      continue;
    fi

    _config_file="${_configDir}/${_name_file}";
    # If this is a symbolic link, remove it
    if [ -h "${_config_file}" ]; then
      rm "${_config_file}";
    fi
    if [ ! -f "${_config_file}" ]; then
      # Skip creating a file just to delete an attribute
      if [ -z "${_bit_list[3]:-}" ]; then continue; fi

      if touch "${_config_file}"; then
        _log_list+=("NOTICE: Created config file |${_config_file}|.");
      else
        _log_list+=("ERROR: Could not create config file |${_config_file}|.");
        continue;
      fi
    fi

    if [ -n "${_bit_list[4]:-}" ]; then
      if grep -q "^${_model_code}$" <<<"${_bit_list[4]:-}"; then
        _log_list+=("Apply ${_apply_str} for model ${_bit_list[4]:-}");
      else
        _log_list+=("SKIP  ${_apply_str} for model ${_bit_list[4]:-}");
        continue
      fi
    else
      _log_list+=("Apply ${_apply_str}");
    fi

    _opt_list=(
      '--file' "${_config_file}" '--group'
      "${_bit_list[1]}" '--key' "${_bit_list[2]}"
    );

    if [ -n "${_bit_list[3]:-}" ]; then
      _opt_list+=("${_bit_list[3]}");
    else
      _opt_list+=('--delete');
    fi

    "${_kwriteconfig5Exe}" "${_opt_list[@]}";
  done

  # TODO: This fixup routine is probably more complicated than it
  # needs to be. Instead, replace special characters in strings
  # like so: Alt+Space\\tAlt+F2\\t => Alt+Space_XtabX_Alt+F2_XtabX_ ...
  # and then replace them above.
  #
  for _line in "${_fixup_list[@]}"; do
    IFS='|' read -r -a _bit_list <<<"${_line}";
    _key="${_bit_list[0]:-}";
    _name_file="${_fileMap[$_key]}";
    if [ -z "${_name_file}" ]; then
      _log_list+=("WARN: Config key |${_key}| is not supported.");
      continue;
    fi

    _config_file="${_configDir}/${_name_file}";
    _fixup_orig_str="$(_cm2EscapeRxCharsFn "${_bit_list[1]}")";
    _fixup_new_str="$(_cm2EscapeRxCharsFn "${_bit_list[2]}")";
    _apply_str="${_line}";

    sed -E -i "s/${_fixup_orig_str}/${_fixup_new_str}/" "${_config_file}";

    _log_list+=("Fixup ${_apply_str}");
  done

  ( IFS=$'\n'; echo "Reset values:"; echo "${_log_list[*]}" )
}
## . END _resetEffects }

## BEGIN _mainFn {
_mainFn () {
  declare _notify_str _prompt_msg _reply_str _power_file _mime_file;

  # Immediately apply effects and return if -d option provided.
  if [ "${1:-}" = '-d' ]; then
    if [ -n "${2:-}" ]; then
      _configDir="$(readlink -f "${2:-}")";
      if [ -d "${_configDir}" ]; then _resetEffectsFn; fi
    fi
    return;
  fi

  # Bail if HOME is not set
  if [ -z "${HOME:-}" ]; then
    _cm2WarnStrFn 'SKIP: No HOME var set.';
    return;
  fi
  _configDir="${HOME:-}/.config";

  _notify_str='';

  if [ -n "${_settingsExe}" ] \
    && pgrep -xf "${_settingsExe}" > /dev/null; then
    _notify_str="$(cat <<_EOH00
${_cm2HtmPStr}Continuing will close <b>System Settings</b> to <br>
to minimize conflicts.</p>
_EOH00
    )";
  fi

  # Notify user
  _prompt_msg="$(
    cat <<_EOH01
${_cm2HtmBeginStr}
<h3 style="color:#f7941d">RESET KFOCUS DESKTOP UX</h3>

${_cm2HtmPStr}This app resets keyboard shortcuts and desktop<br>
effects to Kubuntu Focus defaults.</p>
${_notify_str}

${_cm2HtmPStr}Continue with Reset?</p>
${_cm2HtmEndStr}
_EOH01
  )";

  _reply_str="$(_cm2PromptUserFn "${_prompt_msg}" "${_rootTitle}" 'a')";
  if [ "${_reply_str}" = 'n' ]; then exit 0; fi


  if [ -n "${_settingsExe}" ] \
    && pgrep -xf "${_settingsExe}" > /dev/null; then
    pkill -xf "${_settingsExe}" || true;
  fi

  # Request to reset effects and keyboard shortcuts
  _prompt_msg='Reset effects and keyboard shortcuts';
  _reply_str="$(_cm2PromptUserFn "${_prompt_msg}" "${_rootTitle}" 'a')";
  if [ "${_reply_str}" = 'y' ]; then _resetEffectsFn; fi

  # Request to reset power management
  _power_file="${_configDir}/powermanagementprofilesrc";
  if [ -f "${_power_file}" ]; then
    _prompt_msg='Reset power management to default';
    _reply_str="$(_cm2PromptUserFn "${_prompt_msg}" "${_rootTitle}" 'a')";
    if [ "${_reply_str}" = 'y' ]; then
      rm "${_power_file}" || true;
    fi
  fi

  # Request to reset mime handlers
  _mime_file="${_configDir}/mimeapps.list";
  if [ -f "${_mime_file}" ]; then
    _prompt_msg='Reset file associations to default';
    _reply_str="$(_cm2PromptUserFn "${_prompt_msg}" "${_rootTitle}" 'a')";
    if [ "${_reply_str}" = 'y' ]; then
      rm "${_mime_file}" || true;
    fi
  fi

  # Confirm application of settings
  # shellcheck disable=SC2181
  _prompt_msg="$(cat <<_EOH02
${_cm2HtmBeginStr}
<h3 style="color:#f7941d">RESET KFOCUS UX COMPLETE</h3>
${_cm2HtmPStr}To apply effects, we will reload the plasma <br>
shell, window manager, and keyboard shortcuts.<br></p>

${_cm2HtmPStr}To ensure all changes are applied, please log <br>
out and back in.</p>
${_cm2HtmEndStr}
_EOH02
  )";
  _cm2PromptUserFn "${_prompt_msg}" "${_rootTitle}";

  # Rerun global hot keys
  killall kglobalaccel5 && nohup kglobalaccel5 > /dev/null 2>&1 &
  # shellcheck disable=SC2181
  if [ "$?" = '0' ]; then disown "$!"; sleep 1; fi
  sleep 2;

  # Replace window manager
  nohup kwin --replace > /dev/null 2>&1 &
  # shellcheck disable=SC2181
  if [ "$?" = '0' ]; then disown "$!"; sleep 2; fi
  sleep 2;

  # Replace plasma shell
  nohup plasmashell --replace > /dev/null 2>&1 &
  # shellcheck disable=SC2181
  if [ "$?" = '0' ]; then disown "$!"; sleep 2; fi

  # Rebuild desktop cache
  kbuildsycoca5 || true;
}
## . END _mainFn }

## BEGIN Declare and assign global vars {
declare _rootTitle _assignList _kwriteconfig5Exe _configDir _settingsExe;
declare -A _fileMap=(
  ['font']=kcmfonts
  ['glob']=kdeglobals
  ['kwin']=kwinrc
  ['plwc']=plasma-welcomerc
  ['scut']=kglobalshortcutsrc
);
_configDir='';
_settingsExe="$(command -v systemsettings)";
_rootTitle='Kubuntu Focus Reset Effects';
## . END Declare and assign global vars }

## BEGIN Run main if script is not sourced {
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  _binName="$(  readlink -f "$0"       )" || exit 101;
  _binDir="$(   dirname  "${_binName}" )" || exit 101;
  _baseDir="$(  dirname  "${_binDir}"  )" || exit 101;
  _baseName="$( basename "${_binName}" )" || exit 101;

  _importCommonFn;

  _assignList=(
    '_kwriteconfig5Exe|kwriteconfig5'
  );
  if ! _cm2AssignExeVarsFn "${_assignList[@]}"; then
    _cm2WarnStrFn 'Could not assign variables';
    exit 1;
  fi
  _mainFn "$@";
fi
## . END Run main if script is not sourced }
