#!/bin/bash
#
# Copyright 2019-2024 MindShare Inc.
#
# Written for the Kubuntu Focus by M. Mikowski and A. Rainbolt
#
# Name     : kfocus-tbt-set
# Summary  : kfocus-tbt (start|stop|enable|disable|query)
# Purpose  : Backend component for kfocus-tbt
# Example  : kfocus-tbt-set query
# License  : GPLv2
# Run By   : kfocus-tbt
# Spec     : 4777
#
set -u;

## BEGIN _importCommonFn {
# Summary   : _importCommonFn
# Purpose   : Load common routines, prefer relative dir
# Example   : _importCommonFn;
# Arguments : none
# Globals   : Package vars _baseDir _baseName
# Outputs   : none
# Returns   : none
#
_importCommonFn () {
  declare _lib_list _is_loaded _lib_file;
  _lib_list=(
    "${_baseDir}/lib/common.2.source"
    '/usr/lib/kfocus/lib/common.2.source'
  );
  _is_loaded='n';
  for _lib_file in "${_lib_list[@]}"; do
    if [ -r "${_lib_file}" ]; then
      # shellcheck source=/usr/lib/kfocus/lib/common.2.source
      if source "${_lib_file}"; then
        _is_loaded='y';
        break;
      fi
    fi
  done

  if [ "${_is_loaded}" = 'n' ]; then
    echo 1>&2 "${_baseName}: ABORT - Cannot source common lib";
    exit 202;
  fi
}
## . END _importCommonFn }

## BEGIN _startThunderboltFn {
_startThunderboltFn () {
  if ! grep -q 'thunderbolt' < <(lsmod); then
    grep -q '^XHCI.*enable' "${_acpiWakeupFile}" \
      && echo 'XHCI' > "${_acpiWakeupFile}";
    sleep 1;
    modprobe thunderbolt;
    sleep 1;
    grep -q '^XHCI.*disable' "${_acpiWakeupFile}" \
      && echo 'XHCI' > "${_acpiWakeupFile}";
  fi
}
## . END _startThunderboltFn }

## BEGIN _stopThunderboltFn {
_stopThunderboltFn () {
  if grep -q 'thunderbolt' < <(lsmod); then
    grep -q '^XHCI.*enable' "${_acpiWakeupFile}" \
      && echo 'XHCI' > "${_acpiWakeupFile}";
    sleep 1;
    modprobe -r thunderbolt;
    sleep 1;
    grep -q '^XHCI.*disable' "${_acpiWakeupFile}" \
      && echo 'XHCI' > "${_acpiWakeupFile}";
  fi
}
## . END _stopThunderboltFn }

## BEGIN _wipeThunderboltPersistFn {
_wipeThunderboltPersistFn () {
  if [ -f "${_tbtSymlink}" ] || [ -h "${_tbtSymlink}" ]; then
    rm "${_tbtSymlink}";
  elif [ -e "${_tbtSymlink}" ]; then
    _cm2WarnStrFn 'Thunderbolt disable location occupied and is not a symbolic link!';
    return 1;
  fi
}
## . END _wipeThunderboltPersistFn }

## BEGIN _enableThunderboltFn {
_enableThunderboltFn () {
  _wipeThunderboltPersistFn || return;
  ln -s "${_tbtEnableFile}" "${_tbtSymlink}" || {
    _cm2WarnStrFn 'Failed to install Thunderbolt enable file!';
    return 1;
  }
  update-grub;
  _startThunderboltFn;
}
## . END _enableThunderboltFn }

## BEGIN _disableThunderboltFn {
_disableThunderboltFn () {
  _wipeThunderboltPersistFn || return;
  ln -s "${_tbtDisableFile}" "${_tbtSymlink}" || {
    _cm2WarnStrFn 'Failed to install Thunderbolt disable file!';
    return 1;
  }
  update-grub;
  _stopThunderboltFn;
}
## . END _disableThunderboltFn }

## BEGIN _queryThunderboltFn {
_queryThunderboltFn () {
  declare _run_state _persist_state;

  if grep -q 'thunderbolt' < <(lsmod); then
    _run_state='running';
  else
    _run_state='stopped';
  fi

  if grep -Eq 'GRUB_CMDLINE[^#]+modprobe.blacklist=thunderbolt' \
    "${_tbtSymlink}"; then
    _persist_state='disabled';
  else
    _persist_state='enabled';
  fi

  echo "${_run_state}";
  echo "${_persist_state}";
}
## . END _queryThunderboltFn }

## BEGIN _mainFn {
_mainFn () {
  # TODO Bail out if this isn't an m2g5p1
  declare _arg;

  _arg="${1:-}";
  if [ -z "${_arg}" ]; then
    _cm2WarnStrFn 'No argument provided.';
    return 1;
  fi

  case "${_arg}" in
    'start'  ) _startThunderboltFn   ;;
    'stop'   ) _stopThunderboltFn    ;;
    'enable' ) _enableThunderboltFn  ;;
    'disable') _disableThunderboltFn ;;
    'query'  ) _queryThunderboltFn   ;;
  esac
}
## . END _mainFn }

## BEGIN Declare and assign global vars {
declare _binName _binDir _baseDir _baseName \
  _tbtEnableFile _tbtDisableFile _tbtSymlink _acpiWakeupFile;

_tbtEnableFile='usr/lib/kfocus/conf/m2g5p1-etc_default_grub.d_10_kfocus-tbt-default.cfg';
_tbtDisableFile='/usr/lib/kfocus/conf/m2g5p1-etc_default_grub.d_10_kfocus-tbt-blacklist.cfg';
_tbtSymlink='/etc/default/grub.d/10_kfocus-tbt.cfg';
_acpiWakeupFile='/proc/acpi/wakeup';
## . END Declare and assign global vars }

## BEGIN Run mainFn when script is NOT sourced {
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  _binName="$(  readlink -f "$0"       )" || exit 101;
  _binDir="$(   dirname  "${_binName}" )" || exit 101;
  _baseDir="$(  dirname  "${_binDir}"  )" || exit 101;
  _baseName="$( basename "${_binName}" )" || exit 101;

  # Import libs and assign more global vars
  _importCommonFn;

  _mainFn "$@";
fi
## . END Run mainFn when script is NOT sourced }
