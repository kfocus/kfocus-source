#!/bin/bash
# http://www.alfredklomp.com/programming/shrinkpdf
# Licensed under the 3-clause BSD license:
#
# Copyright (c) 2014, Alfred Klomp
# All rights reserved.
# Updated by Michael Mikowski
#
# Name    : kfocus-shrinkpdf
# License : 3-clause BSD (see above)
# Run By  : Users
#
# Exit   (-u) on unset vars
# Errors (-e) are caught inline using '|| exit' or similar
#

_shrinkFn () {
  gs \
    -q -dNOPAUSE -dBATCH -dSAFER        \
    -sDEVICE=pdfwrite                   \
    -dCompatibilityLevel=1.3            \
    -dPDFSETTINGS=/screen               \
    -dEmbedAllFonts=true                \
    -dSubsetFonts=true                  \
    -dColorImageDownsampleType=/Bicubic \
    -dColorImageResolution="${_dpiStr}" \
    -dGrayImageDownsampleType=/Bicubic  \
    -dGrayImageResolution="${_dpiStr}"  \
    -dMonoImageDownsampleType=/Bicubic  \
    -dMonoImageResolution="${_dpiStr}"  \
    -sOutputFile="${2}"                 \
    "${1}";
}

_chkCopyFile () {
  declare _input_file _output_file _input_size _output_size;
  _input_file="${1:-}";
  _output_file="${2:-}";

  # If $1 and $2 are regular files, we can compare file sizes to
  # see if we succeeded in shrinking. If not, we copy $1 over $2:
  if [ ! -f "${_input_file}" ] || [ ! -f "${_output_file}" ]; then
    return 0;
  fi

  _input_size="$(  wc -c "${_input_file}"  | cut -f1 -d\ )";
  _output_size="$( wc -c "${_output_file}" | cut -f1 -d\ )";

  if (( "${_input_size}" < "${_output_size}" )); then
    1>&2 echo 'Input smaller than output, doing straight copy';
    1>&2 echo "  ( ${_input_size} < ${_output_size} )";
    cp "${_input_file}" "${_output_file}";
  fi
}

_echoUsage () {
  cat << _EOH
Usage: ${_baseName} [-d DPI] INFILE [OUTFILE]

Reduce a PDF file size through lossy recompressing with Ghostscript.
If the file size is not reduced, then a straight copy is done if both
inputs are files. Default DPI is ${_dpiStr}.
_EOH
}

_mainFn () {
  declare _input_file _output_file;
  if [ "${1:-}" = '-d' ]; then
    _dpiStr="$(printf '%d' "${2:-}")";
    shift 2;
  fi
  _input_file="${1:-}";
  _output_file="${2:-}";

  if [ -z "${_input_file}" ]; then
    echo "Bad arguments.";
    _echoUsage;
    exit 1;
  fi

  if [ -z "${_output_file}" ]; then
    _output_file='-';
  fi

  _shrinkFn "${_input_file}" "${_output_file}"    || exit $?;
  _chkCopyFile "${_input_file}" "${_output_file}" || exit $?;
}

declare _dpiStr _binName _binDir _baseDir _baseName;
# Low dpi (72) = better compression. High (300) = better quality
_dpiStr='72';

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  _binName="$(  readlink -f "$0"       )" || exit 101;
  _binDir="$(   dirname  "${_binName}" )" || exit 101;
  _baseDir="$(  dirname  "${_binDir}"  )" || exit 101;
  _baseName="$( basename "${_binName}" )" || exit 101;
  _mainFn "$@";
fi
