#!/bin/bash
# Copyright 2023 MindShare Inc.
# Written for the Kubuntu Focus by
#  - Michael Mikowski
#  - Aaron Rainbolt
#
# Name   : kfocus-main.config
# Purpose: Runs before preinst to present a debconf prompt to the user.
#   In this example, we use debconf commands to show a warning to a user
#   when updating plasma versions. Since we will very likely be updating
#   to Plasma 6.x PPA, we will need a similar capability.
# License: GPL v2
# Example: Test like so: ./kfocus-main.config configure '22.04.50'
#   This should show the user message from the template.
# Run By : apt which runs dpkg and debconf.
# Run By : Scripts that source this file
# Package: kfocus-main
#
# This must be run as root. Use set -u to debug.
#
set -e;

## BEGIN Declare common.2.source symbols {
#  IMPORT 2022-03-23 EXCERPT from test/test-scripts/common.2.source
_cmXBlockMsg='';
_cmXEchoFn    () { 1>&2 echo -e "$*";  }
_cmXSetMsgFn  () { _cmXBlockMsg="$*"; _cmXEchoFn "== BEGIN : ${_cmXBlockMsg}"; }
_cmXSucFn     () { _cmXEchoFn "== . END : OK   ${_cmXBlockMsg}\n\n"; }
_cmXSucStrFn  () { _cmXEchoFn "ok  : ${*}"; }
_cmXWarnFn    () { _cmXEchoFn "== . END : WARN Could not ${_cmXBlockMsg}\n\n"; }
_cmXWarnStrFn () { _cmXEchoFn "warn: ${*}"; }
_cmXTestVersFn () {
  declare _v1 _v2;
  _v1="${1:-}"; _v2="${2:-}";
  [ "$_v1" = "$_v2" ] && return 1;
  [ "$_v1" = "$(echo -e "$_v1\n$_v2" |sort -rV |head -n1)" ];
}
## . END Declare common.2.source symbols }

## BEGIN _postDebconfMsgFn {
# See http://www.fifi.org/doc/debconf-doc/tutorial.html
_postDebconfMsgFn () {
  declare _prior_pkg_vers _debconf_file;
  _prior_pkg_vers="${2:-}";
  _cmXSetMsgFn 'Send post install message if needed';
  if [ -z "${_prior_pkg_vers}" ]; then
    _cmXSucStrFn 'No prior package version found.';
    _cmXSucFn;
    return;
  fi

  # Only show if upgrading pre-plasma 5.27 version
  if ! _cmXTestVersFn '22.04.54' "${_prior_pkg_vers}"; then
    _cmXSucStrFn "No message required, version |${_prior_pkg_vers}|";
    _cmXSucFn;
    return;
  fi

  # Check debconf module file
  _debconf_file='/usr/share/debconf/confmodule';
  if [ ! -r "${_debconf_file}" ]; then
    _cmXWarnStrFn 'Cannot locate debconf module';
    _cmXWarnFn;
    return;
  fi

  # shellcheck disable=1091,1090 source=/usr/share/debconf/confmodule
  source "${_debconf_file}" || true;

  # Bail if key function not found
  if [ ! "$(type -t 'db_input')" = 'function' ]; then
    _cmXWarnStrFn 'Could not load debconf module';
    _cmXWarnFn;
    return;
  fi

  # Display message
  db_fset kfocus-main/plasma_next_01 seen false || echo 'Recovery db_fset';
  db_input critical kfocus-main/plasma_next_01  || echo 'Recovery db_input';
  # shellcheck disable=SC2119
  db_go || echo 'Recovery db_go';

  _cmXSucFn;
}
## . END _postDebconfMsgFn }

## BEGIN Run main if script is not sourced {
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  case "${1:-}" in
    configure|reconfigure)
      _postDebconfMsgFn "$@";
      ;;
    *) true;;
  esac
fi
## . END Run main if script is not sourced }
exit 0;
