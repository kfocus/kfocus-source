#!/bin/bash
#
# Copyright 2019-2024 MindShare Inc.
#
# Written for the Kubuntu Focus by M. Mikowski and A. Rainbolt.
#
# Name     : kfocus-rollback
# Summary  : kfocus-rollback
# Purpose  : Provides a UI for restoring BTRFS snapshots
# Example  : kfocus-snapshot
# License  : GPLv2
# Run By   : Users
# Spec     : 4013
#
set -u;

_stderrFn () {
  2>&1 echo "${_baseName} $*";
}
## BEGIN _loadLibTableFn {
# Summary : _loadLibTableFn <lib_str1> <lib_str2> ...
# Example : _loadLibTableFn "lib01:/usr/lib/lib01" "lib02";
# Purpose :
#   Import table of libs, one arg per lib.
#     * Each arg can have alternates delimited by colons ':'
#     * Fails if all alternates for a lib fails.
#     * Starting lib string '#:' means the following libs are optional.
#     * Diagnostics are sent to STDERR.
#     * Libs without a directory use ${_binDir} as the path
#
_loadLibTableFn () {
  declare _lib_table _lib_list _lib_line _raw_path _lib_file _is_loaded;
  _lib_table=("$@");

  ## Begin: Iterate over lib lines.
  for _lib_line in "${_lib_table[@]}"; do
    # Split line into alternates.
    #   Note: Echo removes trailing newline.
    readarray -d: -t _lib_list < <(echo -n "${_lib_line}");
    _is_loaded='n';

    ## Begin: Iterate over alternates.
    for _raw_path in "${_lib_list[@]}"; do
      [ -z "$(dirname "${_raw_path}")" ] \
        && _lib_file="${_binDir}/${_raw_path}" \
        || _lib_file="${_raw_path}";

      # shellcheck disable=SC1090
      if ! [ -r "${_lib_file}" ]; then
        _stderrFn "warn: source |${_lib_file}| not readable.";
      elif source "${_lib_file}"; then
        _is_loaded='y';
        break;
      else
        _stderrFn "${_baseName} Error: source |${_lib_file}| is non-zero.";
        return 1;
      fi
    done
    ## . End: Iterate over alternates.

    if [ "${_is_loaded}" != 'y' ]; then
      _stderrFn "${_baseName} error: no lib loaded";
      return 1;
    fi
  done
  ## . End: Iterate over lib lines.

  return;
}
## . END _loadLibTableFn }

_selectiveRestoreSnapshotFn () {
  declare _snapshot_id;

  _snapshot_id="${1:-}";
  if [ -z "${_snapshot_id}" ]; then
    _cm2WarnStrFn 'No snapshot ID provided to selectively restore!';
    return 1;
  fi

  "${_dolphinExe}" --split \
    "admin:///btrfs_main/@kfocus-rollback-snapshots/${_snapshot_id}/" \
    'admin:///';
}

_chooseSnapshotFn () {
  declare _snapshot_list_str _snapshot_list _snapshot_disp_list _radio_list \
    _snapshot_idx _answer _select_str;

  _snapshot_list_str="$(_rb2GetSnapshotListStrFn)";
  readarray -t _snapshot_list <<< "${_snapshot_list_str}";
  _snapshot_disp_list=();
  _radio_list=();
  _select_str='on';

  for (( _snapshot_idx=0; _snapshot_idx < ${#_snapshot_list[@]}; \
    _snapshot_idx++ )); do
    _snapshot_disp_list[_snapshot_idx]="$(
      _rb2MakeSnapshotDispIdFn "${_snapshot_list[_snapshot_idx]}";
    )";
    _radio_list+=( "${_snapshot_idx}" \
      "${_snapshot_disp_list[_snapshot_idx]}" "${_select_str}" );
    
    if [ "${_select_str}" = 'on' ]; then
      _select_str='off';
    fi
  done

  _answer="$(_cm2PromptUserFn "${_chooseSnapshotMsg}" "${_winTitle}" 'r' \
    "${_radio_list[@]}")";

  if [ -z "${_answer}" ]; then
    return;
  fi

  echo "${_snapshot_list[_answer]}";
  echo "${_snapshot_disp_list[_answer]}";
  return;
}

_handleOperationExitIntFn () {
  declare _op_type _exit_int _snapshot_disp_id;

  _op_type="${1:-}";
  _exit_int="${2:-}";
  _snapshot_disp_id="${3:-}";

  if [ -z "${_op_type}" ]; then
    _cm2WarnStrFn 'No operation type provided.';
    return 1;
  fi
  if [ -z "${_exit_int}" ]; then
    _cm2WarnStrFn 'No exit int provided.';
    return 1;
  fi
  if [ -z "${_snapshot_disp_id}" ]; then
    _cm2WarnStrFn 'No snapshot display ID provided.';
    return 1;
  fi

  if [ "${_exit_int}" = "${_NOTICE}" ] && [ "${_op_type}" = 'restore' ]; then
    systemctl reboot -i;
  elif [ "${_exit_int}" = "${_ERR}" ]; then
    if [ "${_op_type}" = 'restore' ]; then
      _restoreFailedMsg="${_restoreFailedMsg//XXX_SNAPSHOT_NAME_XXX/${_snapshot_disp_id}}";
      _cm2PromptUserFn "${_restoreFailedMsg}" "${_winTitle}";
      exit "${_ERR}";
    elif [ "${_op_type}" = 'delete' ]; then
      _deletionFailedMsg="${_restoreFailedMsg//XXX_SNAPSHOT_NAME_XXX/${_snapshot_disp_id}}";
      _cm2PromptUserFn "${_deletionFailedMsg}" "${_winTitle}";
      exit "${_ERR}";
    else
      _cm2WarnStrFn 'Unrecognized operation type provided.';
      return 1;
    fi
  # 127 = auth failure, this is what pkexec spits out if you click 'Cancel' on
  # the auth window or provide a wrong password too many times.
  elif [ "${_exit_int}" = '127' ]; then
    _cm2PromptUserFn "${_operationCancelledMsg}" "${_winTitle}";
    exit "${_NOTICE}";
  elif [ "${_op_type}" = 'restore' ]; then
    _cm2PromptUserFn "${_criticalErrorMsg}" "${_winTitle}" 'e';
    exit "${_exit_int}";
  elif [ "${_op_type}" = 'delete' ]; then
    _deletionSuccessfulMsg="${_deletionSuccessfulMsg//XXX_SNAPSHOT_NAME_XXX/${_snapshot_disp_id}}";
    _cm2PromptUserFn "${_deletionSuccessfulMsg}" "${_winTitle}";
    exit "${_NOTICE}";
  fi
}

## BEGIN _mainFn {
#
_mainFn () {
  declare _arg_str _btrfs_status_str _snapshot_id _restore_mode _exit_int \
    _working_subvol_loc _working_boot_subvol_loc _restored_snapshot_disp_id \
    _snapshot_disp_id;

  _arg_str="${1:-}";
  _working_subvol_loc='/btrfs_main/@kfocus-rollback-working';
  _working_boot_subvol_loc='/btrfs_boot/@kfocus-rollback-working-boot';

  _btrfs_status_str="$(_rb2GetBtrfsStatusFn)"

  if [ "${_btrfs_status_str}" != 'SUPPORTED, SET UP' ]; then
    _cm2PromptUserFn "${_systemUnsupportedMsg}" "${_winTitle}";
    exit "${_NOTICE}";
  fi

  if mount | grep 'btrfs' | grep -q '@kfocus-rollback-working' \
    || mount | grep 'btrfs' | grep -q '@kfocus-rollback-working-boot'; then
    _cm2PromptUserFn "${_restoreIncompleteMsg}" "${_winTitle}" 's';
    exit "${_NOTICE}";
  fi

  if [ -e "${_working_subvol_loc}" ]; then
    _strangeSubvolsMsg="${_strangeSubvolsMsg//XXX_SUBVOL_NAME_XXX/${_working_subvol_loc}}";
    _cm2PromptUserFn "${_strangeSubvolsMsg}" "${_winTitle}" 's';
    exit "${_ERR}"
  elif [ -e "${_working_boot_subvol_loc}" ]; then
    _strangeSubvolsMsg="${_strangeSubvolsMsg//XXX_SUBVOL_NAME_XXX/${_working_boot_subvol_loc}}";
    _cm2PromptUserFn "${_strangeSubvolsMsg}" "${_winTitle}" 's';
    exit "${_ERR}"
  fi

  if [ "${_arg_str}" = 'afterRestore' ]; then
    _snapshot_id="$(_rb2GetSnapshotListStrFn | head -n1)";
    _restored_snapshot_disp_id="$(
      cat /var/lib/kfocus/kfocus_rollback_restore_complete
    )";
    _rollbackSuccessfulMsg="${_rollbackSuccessfulMsg//XXX_SNAPSHOT_NAME_XXX/${_restored_snapshot_disp_id}}";
    if [ "$(_cm2PromptUserFn "${_rollbackSuccessfulMsg}" \
      "FocusRx: System Rollback" 'a')" = 'y' ]; then
      _selectiveRestoreSnapshotFn "${_snapshot_id}";
      exit "${_NOTICE}";
    else
      exit "${_NOTICE}";
    fi
  fi

  if [ -z "$(ls '/btrfs_main/@kfocus-rollback-snapshots')" ]; then
    _cm2PromptUserFn "${_noSnapshotsFoundMsg}" "${_winTitle}";
    exit "${_NOTICE}";
  fi

  IFS=$'\n'; read -r -d '' _snapshot_id _snapshot_disp_id \
    < <(_chooseSnapshotFn);

  if [ -z "${_snapshot_id}" ]; then
    _cm2PromptUserFn "${_operationCancelledMsg}" "${_winTitle}";
    exit "${_NOTICE}";
  fi
  
  _chooseRestoreTypeMsg="${_chooseRestoreTypeMsg//XXX_SNAPSHOT_NAME_XXX/${_snapshot_disp_id}}";
  _restore_mode="$(_cm2PromptUserFn "${_chooseRestoreTypeMsg}" \
    "${_winTitle}" 'r' 'totalRestore' \
    'Restore the Entire Snapshot (recommended)' 'on' 'selectiveRestore' \
    'Restore Individual Files (ADVANCED)' 'off' 'delete' \
    'Delete The Snapshot' 'off')";

  if [ -z "${_restore_mode}" ]; then
    _cm2PromptUserFn "${_operationCancelledMsg}" "${_winTitle}";
    exit "${_NOTICE}";
  fi

  if [ "${_restore_mode}" = 'totalRestore' ]; then
    _doTotalRestoreMsg="${_doTotalRestoreMsg//XXX_SNAPSHOT_NAME_XXX/${_snapshot_disp_id}}";
    if [ "$(_cm2PromptUserFn "${_doTotalRestoreMsg}" "${_winTitle}" \
      'o')" = 'y' ]; then
      _rb2SystemRollbackFn "${_snapshot_id}";
      _handleOperationExitIntFn 'restore' "$?" "${_snapshot_disp_id}";
    else
      _cm2PromptUserFn "${_operationCancelledMsg}" "${_winTitle}";
      exit "${_NOTICE}";
    fi
  elif [ "${_restore_mode}" = 'selectiveRestore' ]; then
    _doSelectiveRestoreMsg="${_doSelectiveRestoreMsg//XXX_SNAPSHOT_NAME_XXX/${_snapshot_disp_id}}";
    if [ "$(_cm2PromptUserFn "${_doSelectiveRestoreMsg}" "${_winTitle}" \
      'o')" = 'y' ]; then
      _selectiveRestoreSnapshotFn "${_snapshot_id}";
    else
      _cm2PromptUserFn "${_operationCancelledMsg}" "${_winTitle}";
      exit "${_NOTICE}";
    fi
  elif [ "${_restore_mode}" = 'delete' ]; then
    _doDeleteMsg="${_doDeleteMsg//XXX_SNAPSHOT_NAME_XXX/${_snapshot_disp_id}}";
    if [ "$(_cm2PromptUserFn "${_doDeleteMsg}" "${_winTitle}" \
      'o')" = 'y' ]; then
      _rb2DeleteSnapshotFn "${_snapshot_id}";
      _handleOperationExitIntFn 'delete' "$?" "${_snapshot_disp_id}";
    else
      _cm2PromptUserFn "${_operationCancelledMsg}" "${_winTitle}";
      exit "${_NOTICE}";
    fi
  fi

  exit "${_NOTICE}";
}
## . END _mainFn }

## BEGIN Declare and assign global vars {
declare _binName _binDir _baseName _baseDir _libTable _assignList _kdiagExe \
  _whiptailExe _snapshotSetExe _dolphinExe _escExe _winTitle _browThickStr \
  _erowStr _tableStr _systemUnsupportedMsg _restoreIncompleteMsg \
  _noSnapshotsFoundMsg _strangeSubvolsMsg _chooseSnapshotMsg \
  _chooseRestoreTypeMsg _doSelectiveRestoreMsg _doTotalRestoreMsg \
  _doDeleteMsg _deletionSuccessfulMsg _restoreFailedMsg _deletionFailedMsg \
  _criticalErrorMsg _operationCancelledMsg _rollbackSuccessfulMsg;
## . END Declare and assign global vars }

## BEGIN Run mainFn when script is NOT sourced {
#
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  _binName="$(  readlink -f "$0"       )" || exit 101;
  _binDir="$(   dirname  "${_binName}" )" || exit 101;
  _baseDir="$(  dirname  "${_binDir}"  )" || exit 101;
  _baseName="$( basename "${_binName}" )" || exit 101;

  # Import libs and assign more global vars
  _libTable=(
    '/usr/lib/kfocus/lib/common.2.source'
    '/usr/lib/kfocus/lib/rollback.2.source'
  );

  _loadLibTableFn "${_libTable[@]}" || exit 1;

  _assignList=(
    '_kdiagExe|/usr/bin/kdialog'
    '_whiptailExe|/usr/bin/whiptail'
    "_snapshotSetExe|${_binDir}/kfocus-rollback-set"
    '_dolphinExe|/usr/bin/dolphin'
  );

  if ! _cm2AssignExeVarsFn "${_assignList[@]}"; then
    _cm2ErrStrFn 'Could not assign variable';
    exit 1;
  fi

  _escExe="$(_cm2GetEscExeFn)" || exit;

  # Set UI messages
  _winTitle='System Rollback';
  _browThickStr='<tr><td style="padding:8px 32px 8px 0">';
  _browThinStr='<tr><td style="padding:8px 0 8px 0">';
  _erowStr='</td></tr>';
  _tableStr='<table style="width:100%;margin-right:32px">';

  _systemUnsupportedMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThickStr}<h3 style="color:#f7941d">System Unsupported</h3>${_erowStr}

${_browThickStr}Doc: <a style="color:#1d99f3"
  href="https://kfocus.org/wf/tools#rollback"
  >https://kfocus.org/wf/tools#rollback</a>${_erowStr}

${_browThickStr}This system does not appear to support snapshotting<br>
and rollback. Please see
<a style="color:#1d99f3" href="https://kfocus.org/wf/recovery"
>https://kfocus.org/wf/recovery</a><br>
for other recovery steps you can take.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _restoreIncompleteMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThickStr}<h3 style="color:#f7941d">Restore Incomplete</h3>${_erowStr}

${_browThickStr}Doc: <a style="color:#1d99f3"
  href="https://kfocus.org/wf/tools#rollback"
  >https://kfocus.org/wf/tools#rollback</a>${_erowStr}

${_browThickStr}You appear to have restored a snapshot, but have<br>
not yet rebooted after this. Please reboot to<br>
finalize the restore process. If this does not fix<br>
your system, you can attempt another rollback.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _noSnapshotsFoundMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThickStr}<h3 style="color:#f7941d">No Snapshots Found</h3>${_erowStr}

${_browThickStr}Doc: <a style="color:#1d99f3"
  href="https://kfocus.org/wf/tools#rollback"
  >https://kfocus.org/wf/tools#rollback</a>${_erowStr}

${_browThickStr}There do not appear to be any snapshots<br>
available to roll back to. Please see<br>
<a style="color:#1d99f3" href="https://kfocus.org/wf/recovery"
>https://kfocus.org/wf/recovery</a>
for other<br>
recovery steps you can take.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _strangeSubvolsMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThickStr}<h3 style="color:#f7941d">Strange BTRFS Subvols</h3>${_erowStr}

${_browThickStr}Doc: <a style="color:#1d99f3"
  href="https://kfocus.org/wf/tools#rollback"
  >https://kfocus.org/wf/tools#rollback</a>${_erowStr}

${_browThickStr}The BTRFS subvolume at<br>
<code>XXX_SUBVOL_NAME_XXX</code><br>
should not exist, but does. The restore operation<br>
cannot proceed with this subvolume present.${_erowStr}

${_browThickStr}Please ensure this subvolume does not contain any<br>
important data, then remove it with<br>
<code>sudo btrfs subvolume delete</code>.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _chooseSnapshotMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThinStr}<h3 style="color:#f7941d">System Rollback (1 of 3)</h3>${_erowStr}

${_browThinStr}Doc: <a style="color:#1d99f3"
  href="https://kfocus.org/wf/tools#rollback"
  >https://kfocus.org/wf/tools#rollback</a>${_erowStr}

${_browThinStr}<b style="color:#f7941d"
>Use this tool to restore or delete a snapshot.</b> Restore allows<br>
you to undo recent changes that may have caused system<br>
issues. It reverts the apps, kernel, and system data.${_erowStr}

${_browThinStr}<b style="color:#f7941d"
>This tool will NOT restore files in the /home filesystem.</b> For<br>
that, click "Cancel" and use the "Back In Time" icon found next<br>
to the system tray.${_erowStr}

${_browThinStr}Select the snapshot and click OK to get
started.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _chooseRestoreTypeMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThinStr}<h3 style="color:#f7941d">System Rollback (2 of 3)</h3>${_erowStr}

${_browThinStr}You have selected the following snapshot:${_erowStr}

${_browThinStr}<b style="color:#f7941d"
>"XXX_SNAPSHOT_NAME_XXX"</b>${_erowStr}

${_browThinStr}We recommend you "Restore the Entire Snapshot" to avoid <br>
data consistency problems.${_erowStr}

${_browThinStr}
As with any system maintenance, it is best practice to back up<br>
any critical data first. See
<a style="color:#1d99f3"
href="https://kfocus.org/wf/backup"
>https://kfocus.org/wf/backup</a> for<br>
guidance.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _doSelectiveRestoreMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThickStr}<h3 style="color:#f7941d">System Rollback (3 of 3)</h3>${_erowStr}

${_browThickStr}You can now selectively restore files from this
snapshot:${_erowStr}

${_browThickStr}<b style="color:#f7941d"
>"XXX_SNAPSHOT_NAME_XXX"</b>${_erowStr}

${_browThickStr}<b style="color:#da4453"
>WARNING: PROCEED WITH CAUTION!</b> You will be restoring<br>
system files as root!${_erowStr}

${_browThickStr}Click on OK below to open a file manager with the snapshot<br>
on the LEFT and the current root filesystem on the RIGHT.<br>
When you are done copying files and directories, simply<br>
close the file manager.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _doTotalRestoreMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThickStr}<h3 style="color:#f7941d">System Rollback (3 of 3)</h3>${_erowStr}

${_browThickStr}The following snapshot is now ready to be restored:${_erowStr}

${_browThickStr}<b style="color:#f7941d"
>"XXX_SNAPSHOT_NAME_XXX"</b>${_erowStr}

${_browThickStr}<b style="color:#da4453"
>WARNING: This will immediately reboot the system!</b><br>
Please save any open work. Click OK to snapshot your<br>
current root filesystem, finalize the restore, and reboot.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _doDeleteMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThickStr}<h3 style="color:#f7941d">System Rollback (3 of 3)</h3>${_erowStr}

${_browThickStr}The following snapshot is ready to be deleted:${_erowStr}

${_browThickStr}<b style="color:#f7941d"
>"XXX_SNAPSHOT_NAME_XXX"</b>${_erowStr}

${_browThickStr}<b style="color:#da4453"
>WARNING: Deleting a snapshot cannot be undone!</b>${_erowStr}

${_browThickStr}Click on OK below to delete the snapshot, or Cancel to<br>
back out.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _deletionSuccessfulMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThickStr}<h3 style="color:#f7941d">Snapshot Deleted</h3>${_erowStr}

${_browThickStr}
The following snapshot has been successfully deleted:${_erowStr}

${_browThickStr}<b style="color:#f7941d"
>"XXX_SNAPSHOT_NAME_XXX"</b>${_erowStr}
${_cm2HtmEndStr}
EOF
  )";

  _restoreFailedMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThickStr}<h3 style="color:#f7941d">Restore Failed</h3>${_erowStr}

${_browThickStr}The following snapshot could NOT be restored:${_erowStr}

${_browThickStr}<b style="color:#f7941d"
>"XXX_SNAPSHOT_NAME_XXX"</b>${_erowStr}

${_browThickStr}No changes have been made.${_erowStr}

${_browThickStr}Please try to restore again. If this fails, see<br>
<a href="https://kfocus.org/wf/recovery"
>https://kfocus.org/wf/recovery</a> for other<br>
recovery options.${_erowStr}

${_browThickStr}
Please contact support if this issue persists.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _deletionFailedMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThickStr}<h3 style="color:#f7941d">Restore Failed</h3>${_erowStr}

${_browThickStr}The following snapshot could NOT be deleted:${_erowStr}

${_browThickStr}<b style="color:#f7941d"
>"XXX_SNAPSHOT_NAME_XXX"</b>${_erowStr}

${_browThickStr}Most likely it was already removed by automatic<br>
snapshot maintenance. No changes have been<br>
made.${_erowStr}

${_browThickStr}
Please contact support if this issue persists.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _criticalErrorMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThickStr}<h3 style="color:#f7941d">Critical Error</h3>${_erowStr}

${_browThickStr}System Rollback was interrupted while attempting<br>
to delete or restore a snapshot on your system.<br>
This incident may be the result of failing hardware<br>
or a software conflict.${_erowStr}

${_browThickStr}<b>Please do NOT reboot. Back up your data as<br>
soon as possible.</b> Failure to do so may result in<br>
data loss.${_erowStr}

${_browThickStr}See<br>
<a style="color:#1d99f3"
href="https://kfocus.org/wf/backup#bkm_take_a_snapshot"
>https://kfocus.org/wf/backup#bkm_take_a_snapshot</a><br>
for instructions on how to safeguard your data.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _operationCancelledMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThickStr}<h3 style="color:#f7941d">Operation Cancelled</h3>${_erowStr}

${_browThickStr}Snapshot operation cancelled.${_erowStr}

${_browThickStr}No changes have been made to the system.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _rollbackSuccessfulMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browThickStr}<h3 style="color:#f7941d">Rollback Successful</h3>${_erowStr} 

${_browThickStr}Doc: <a style="color:#1d99f3"
  href="https://kfocus.org/wf/tools#rollback"
  >https://kfocus.org/wf/tools#rollback</a>${_erowStr}

${_browThickStr}Files from the snapshot${_erowStr}

${_browThickStr}<b style="color:#f7941d"
>"XXX_SNAPSHOT_NAME_XXX"</b>${_erowStr}

${_browThickStr}have been restored to the root filesystem.${_erowStr}

${_browThickStr}If you desire, you may compare to the files<br>
as they existed prior to the rollback. The<br>
snapshot will appear on the LEFT, while the<br>
current root filesystem will be shown on the<br>
RIGHT. This is advanced, and is not<br>
recommended for most users. However, it<br>
can be useful for restoring database files,<br>
for instance.${_erowStr}

${_browThickStr}Would you like to compare now?${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  # Make sure TTY mode looks nice
  _cm2SetCliTypeFn 'whiptail';

  _mainFn "$@";
fi
## . END Run mainFn when script is NOT sourced }
