#!/bin/bash
#
# Copyright 2019-2024 MindShare Inc.
#
# Written for the Kubuntu Focus by M. Mikowski and A. Rainbolt.
#
# Name     : kfocus-snapshot
# Summary  : kfocus-snapshot
# Purpose  : Provides a UI for creating new BTRFS snapshots
# Example  : kfocus-snapshot
# License  : GPLv2
# Run By   : Users
# Spec     : 4013
#
set -u;

## BEGIN _importCommonFn {
# Summary   : _importCommonFn
# Purpose   : Load common routines, prefer relative dir
# Example   : _importCommonFn;
# Arguments : none
# Globals   : Package vars _baseDir _baseName
# Outputs   : none
# Returns   : none
#
_importCommonFn () {
  declare _lib_list _is_loaded _lib_file;
  _lib_list=(
    "${_baseDir}/lib/common.2.source"
    "${_binDir}/common.2.source"
    '/usr/lib/kfocus/lib/common.2.source'
  );
  _is_loaded='n';
  for _lib_file in "${_lib_list[@]}"; do
    if [ -r "${_lib_file}" ]; then
      # shellcheck source=/usr/lib/kfocus/lib/common.2.source
      if source "${_lib_file}"; then
        _is_loaded='y';
        break;
      fi
    fi
  done

  if [ "${_is_loaded}" = 'n' ]; then
    echo 1>&2 "${_baseName}: ABORT - Cannot source common lib";
    exit 202;
  fi
}
## . END _importCommonFn }

## BEGIN _getSnapshotListStrFn {
#
_getSnapshotListStrFn () {
   find '/btrfs_main/@kfocus-rollback-snapshots' -maxdepth 1 \
     | cut -d'@' -f3 \
     | sort -n -r \
     | sed '/^$/d; s/^/@/;';
}
## . END _getSnapshotListStrFn }

## BEGIN _makeSnapshotDispIdFn {
#
_makeSnapshotDispIdFn () {
  declare _snapshot_id _snapshot_reason_loc _snapshot_reason_raw \
    _snapshot_reason _snapshot_datetime _snapshot_disp_id;

  _snapshot_id="${1:-}";
  _snapshot_reason_loc="${2:-}";

  if [ -z "${_snapshot_id}" ] || [ -z "${_snapshot_reason_loc}" ]; then
    _cm2WarnStrFn 'Invalid arguments, cannot generate snapshot display ID';
    return 1;
  fi

  _snapshot_reason_raw="$(cat "${_snapshot_reason_loc}")";
  case "${_snapshot_reason_raw}" in
    'Apt')
      _snapshot_reason='Before Package Change';
      ;;
    'Timed')
      _snapshot_reason='System Schedule';
      ;;
    'Pre-Rollback')
      _snapshot_reason='Pre-Rollback';
      ;;
    *) # must be user-generated
      _snapshot_reason="Created by ${_snapshot_reason_raw}";
      ;;
  esac

  _snapshot_datetime="$(date -d "${_snapshot_id}" '+%a %F %H:%M')";

  _snapshot_disp_id="${_snapshot_datetime} | ${_snapshot_reason}";
  echo "${_snapshot_disp_id}";
}
## . END _makeSnapshotDispIdFn }

_getSystemStateFn () {
  "${_snapshotSetExe}" 'getSystemState';
}

_focusRxSnapshotFn () {
  "${_escExe}" "${_snapshotSetExe}" 'focusRxSnapshot' "${1:-}";
}

## BEGIN _mainFn {
#
_mainFn () {
  declare _system_state_str _ans _exit_int _snapshot_id _snapshot_disp_id;

  # This function will exit with LOCK if the lockfile cannot be grabbed, so we
  # wait until the lock is released before showing the UI (since we have to in
  # order to get the state of the system).
  while true; do
    _system_state_str="$(_getSystemStateFn)"
    _exit_int="$?";

    # Override false positive due to complex exit code handling
    # shellcheck disable=SC2181
    if [ "${_exit_int}" = "${_LOCK}" ]; then
      sleep 1;
    elif [ "${_exit_int}" = "${_OK}" ]; then
      break;
    else
      exit "${_exit_int}";
    fi
  done

  if [ "${_system_state_str}" != 'SUPPORTED, SET UP' ]; then
    _cm2PromptUserFn "${_systemUnsupportedMsg}" "${_winTitle}";
    exit "${_OK}";
  fi

  _ans="$(_cm2PromptUserFn "${_createSnapshotMsg}" "${_winTitle}" 'a')";

  if [ "${_ans}" = 'y' ]; then
    _focusRxSnapshotFn "$USER";
    _exit_int="$?";
    if [ "${_exit_int}" = "${_OK}" ]; then
      _snapshot_id="$(_getSnapshotListStrFn | head -n1)";
      _snapshot_disp_id="$(_makeSnapshotDispIdFn "${_snapshot_id}" \
        "/btrfs_main/@kfocus-rollback-snapshots/${_snapshot_id}/var/lib/kfocus/kfocus_rollback_snapshot_reason")";
      _snapshotCreatedMsg="${_snapshotCreatedMsg//XXX_SNAPSHOT_NAME_XXX/${_snapshot_disp_id}}";
      _cm2PromptUserFn "${_snapshotCreatedMsg}" "${_winTitle}";
    else
      if [ "${_exit_int}" = "${_FAIL}" ]; then
        _cm2PromptUserFn "${_snapshotCreationFailedMsg}" "${_winTitle}" 's';
        exit "${_FAIL}";
      else
        _cm2PromptUserFn "${_criticalErrorMsg}" "${_winTitle}" 'e';
        exit "${_exit_int}";
      fi
    fi
  fi

  exit "${_OK}";
}
## . END _mainFn }

## BEGIN Declare and assign global vars {
declare _binName _binDir _baseName _baseDir _assignList _kdiagExe \
  _whiptailExe _snapshotSetExe _escExe _winTitle _browStr _erowStr _tableStr \
  _createSnapshotMsg _systemUnsupportedMsg _snapshotCreatedMsg \
  _snapshotCreationFailedMsg _criticalErrorMsg _OK _FAIL _RECFAIL _CRITFAIL \
  _DEATH _LOCK;
## . END Declare and assign global vars }

## BEGIN Run mainFn when script is NOT sourced {
#
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  _binName="$(  readlink -f "$0"       )" || exit 101;
  _binDir="$(   dirname  "${_binName}" )" || exit 101;
  _baseDir="$(  dirname  "${_binDir}"  )" || exit 101;
  _baseName="$( basename "${_binName}" )" || exit 101;

  _assignList=(
    '_kdiagExe|/usr/bin/kdialog'
    '_whiptailExe|/usr/bin/whiptail'
    "_snapshotSetExe|${_binDir}/kfocus-rollback-set"
  );

  # Import libs and assign more global vars
  _importCommonFn;
  if ! _cm2AssignExeVarsFn "${_assignList[@]}"; then
    _cm2ErrStrFn 'Could not assign variable';
    exit 1;
  fi

  _escExe="$(_cm2GetEscExeFn)" || exit;

  # Set UI messages
  _winTitle='System Snapshot';
  _browStr='<tr><td style="padding:8px 32px 8px 0">';
  _erowStr='</td></tr>';
  _tableStr='<table style="width:100%;margin-right:32px">';

  _createSnapshotMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browStr}<h3 style="color:#f7941d">System Snapshot</h3>${_erowStr}

${_browStr}Doc: <a style="color:#1d99f3"
  href="https://kfocus.org/wf/tools#snapshot"
  >https://kfocus.org/wf/tools#snapshot</a>${_erowStr}

${_browStr}Use this tool to create a snapshot of the root filesystem.
${_erowStr}

${_browStr}<b style="color:#f7941d"
>IMPORTANT: Virtual machine data (libvirt) will NOT be<br>
included in the snapshot.</b>${_erowStr}

${_browStr}Use the "System Rollback" app to restore snapshots.${_erowStr}

${_browStr}<b>Create Snapshot Now?</b>${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _systemUnsupportedMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browStr}<h3 style="color:#f7941d">System Unsupported</h3>${_erowStr}

${_browStr}Doc: <a style="color:#1d99f3"
  href="https://kfocus.org/wf/tools#snapshot"
  >https://kfocus.org/wf/tools#snapshot</a>${_erowStr}

${_browStr}This system does not appear to support snapshotting<br>
and rollback. Please see
<a style="color:#1d99f3" href="https://kfocus.org/wf/recovery"
>https://kfocus.org/wf/recovery</a><br>
for other recovery steps you can take.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _snapshotCreatedMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browStr}<h3 style="color:#f7941d">Snapshot Created</h3>${_erowStr}

${_browStr}A snapshot of the root filesystem called${_erowStr}

${_browStr}<b style="color:#f7941d"
>"XXX_SNAPSHOT_NAME_XXX"</b>${_erowStr}

${_browStr}has been created.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _snapshotCreationFailedMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browStr}<h3 style="color:#f7941d">Snapshot Creation Failed</h3>${_erowStr}

${_browStr}Something went wrong and FocusRx was unable to<br>
create a root filesystem snapshot. No changes have<br>
been made to your system.${_erowStr}

${_browStr}Please try to create a snapshot again. You are<br>
encouraged to contact technical support if this<br>
issue is persistent.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  _criticalErrorMsg="$(cat <<EOF
${_cm2HtmBeginStr}${_tableStr}
${_browStr}<h3 style="color:#f7941d">Critical Error</h3>${_erowStr}

${_browStr}FocusRx was interrupted while attempting to<br>
snapshot the root filesystem. This incident may<br>
be the result of failing hardware or a software<br>
conflict.${_erowStr}

${_browStr}<b>Please do NOT reboot. Back up your data as<br>
soon as possible.</b> Failure to do so may result in<br>
data loss. See<br>
<a style="color:#1d99f3"
href="https://kfocus.org/wf/backup#bkm_take_a_snapshot"
>https://kfocus.org/wf/backup#bkm_take_a_snapshot</a><br>
for instructions on how to safeguard your data.${_erowStr}</table>
${_cm2HtmEndStr}
EOF
  )";

  # Set meaningful names for error codes
  _OK='0';
  _FAIL='1';
  _RECFAIL='2';
  _CRITFAIL='3';
  _DEATH='4';
  _LOCK='20';

  # Make sure TTY mode looks nice
  _cm2SetCliTypeFn 'whiptail'

  _mainFn "$@";
fi
## . END Run mainFn when script is NOT sourced }

